# docker-compose.yml
services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

  postgres-warehouse:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: warehouse_db
      POSTGRES_USER: warehouse_user
      POSTGRES_PASSWORD: warehouse_pass
    ports:
      - '5433:5432' # чтобы не конфликтовал с Keycloak на хосте
    volumes:
      - postgres_warehouse_data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:26.4.0
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak_db
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME_STRICT: 'false'
      KC_HTTP_ENABLED: 'true'
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    command: start-dev --verbose

  backend:
    build: .
    env_file:
      - .env
    ports:
      - '8000:8000'
    depends_on:
      - keycloak
    volumes:
      - .:/app
    command: >
      sh -c "echo 'Waiting for Keycloak...' && 
             sleep 10 && 
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

volumes:
  postgres_data:
  postgres_warehouse_data:
